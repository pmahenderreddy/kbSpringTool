spring.application.name=TodoApp

# default LOGGING LEVEL is INFO, if you don't mention; usually it is used in production
#logging.level.org.springframework=INFO
#logging.level.com.mahi.todoapp=INFO
logging.level.root=INFO

#spring.jmx.enabled=true

# Set the prefix for JSP files
spring.mvc.view.prefix=/WEB-INF/jsp/

# Set the suffix for JSP files
spring.mvc.view.suffix=.jsp

spring.mvc.format.date=yyyy-MM-dd


#;MODE=MySQL .... case insensitive 
#;MODE=PostgreSQL .... case sensitive
# by default is case insensitive (as per doc), but I don't see that ;P
#spring.datasource.url=jdbc:h2:mem:todos

#run mysqlsh
# $mysqlsh> \connect todos-user@localhost:3306
spring.datasource.url=jdbc:mysql://localhost:3306/todos
spring.datasource.username=todos-user
spring.datasource.password=dummytodos
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#The spring.jpa.hibernate.ddl-auto property in a Spring Boot application is 
#used to control the behavior of the JPA (Java Persistence API) schema generation 
#at application startup. It works with Hibernate (the default JPA implementation 
#in Spring Boot) to manage how the database schema is handled.
# none/update/create/create-drop/validate
#If you're working in a production environment, you might want to 
# set it to none or validate to avoid unexpected changes to your schema.
spring.jpa.hibernate.ddl-auto=update

#wait for tables to be created before loading sql(s) script files... since h2 is inMemory database
#This configuration delays the initialization of JPA (such as schema creation or validation) 
#until the datasource is fully initialized and ready. 
# Delay JPA initialization until datasource is fully initialized
spring.jpa.defer-datasource-initialization=true

#to show sql queries in console
spring.jpa.show-sql=true
